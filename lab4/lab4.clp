;;;======================================================
;;;   Экспертная система диагностики автомобилей
;;;   Версия 1.0 - 2023
;;;======================================================

;;****************
;;* ВСПОМОГАТЕЛЬНЫЕ ФУНКЦИИ *
;;****************

(deffunction задать-вопрос (?вопрос $?допустимые-ответы)
   (printout t ?вопрос " ")
   (bind ?ответ (read))
   (if (lexemep ?ответ) 
       then (bind ?ответ (lowcase ?ответ)))
   (while (not (member ?ответ ?допустимые-ответы)) do
      (printout t "Пожалуйста, ответьте: " ?допустимые-ответы crlf ?вопрос " ")
      (bind ?ответ (read))
   ?ответ)

(deffunction да-или-нет (?вопрос)
   (bind ?ответ (задать-вопрос ?вопрос да нет д н y n))
   (if (or (eq ?ответ да) (eq ?ответ д) (eq ?ответ y))
       then да 
       else нет))

;;;***************
;;;* ПРАВИЛА ДИАГНОСТИКИ *
;;;***************

(defrule определить-запуск ""
   (not (двигатель-заводится ?))
   =>
   (assert (двигатель-заводится (да-или-нет "Двигатель заводится (да/нет)? ")))
   
(defrule определить-нормальную-работу ""
   (двигатель-заводится да)
   =>
   (assert (работает-нормально (да-или-нет "Двигатель работает нормально (да/нет)? ")))

(defrule определить-вращение ""
   (двигатель-заводится нет)
   =>
   (assert (двигатель-вращается (да-или-нет "Двигатель вращается при попытке запуска (да/нет)? ")))
   
(defrule определить-вялость ""
   (работает-нормально нет)
   =>
   (assert (двигатель-вялый (да-или-нет "Двигатель работает вяло (да/нет)? "))))
   
(defrule определить-пропуски ""
   (работает-нормально нет)
   =>
   (assert (пропуски-зажигания (да-или-нет "Есть пропуски зажигания (да/нет)? "))))

(defrule определить-стук ""
   (работает-нормально нет)
   =>
   (assert (стук-двигателя (да-или-нет "Слышен стук в двигателе (да/нет)? "))))

(defrule определить-мощность ""
   (работает-нормально нет)
   =>
   (assert (потеря-мощности (да-или-нет "Заметна потеря мощности (да/нет)? "))))

(defrule определить-бензин ""
   (двигатель-заводится нет)
   (двигатель-вращается да)
   =>
   (assert (бензин-в-баке (да-или-нет "Есть бензин в баке (да/нет)? "))))

(defrule определить-аккумулятор ""
   (двигатель-вращается нет)
   =>
   (assert (заряд-аккумулятора (да-или-нет "Аккумулятор заряжен (да/нет)? "))))

(defrule определить-свечи ""
   (or (and (двигатель-заводится нет)      
            (двигатель-вращается да))
       (потеря-мощности да))
   =>
   (assert (состояние-свечей
      (задать-вопрос "Какое состояние свечей зажигания (нормальные/нагар/мокрые)? "
                    нормальные нагар мокрые))))

(defrule определить-катушку ""
   (двигатель-заводится нет)      
   (двигатель-вращается нет)
   (заряд-аккумулятора да)
   =>
   (assert (проверка-катушки
              (да-или-нет "Катушка зажигания исправна (да/нет)? "))))

;;;****************
;;;* ПРАВИЛА РЕМОНТА *
;;;****************

(defrule нормальная-работа ""
   (работает-нормально да)
   =>
   (assert (диагноз "Неисправностей не обнаружено.")))

(defrule вялый-двигатель ""
   (двигатель-вялый да)
   =>
   (assert (диагноз "Почистите топливную систему и замените топливный фильтр."))) 

(defrule пропуски-зажигания ""
   (пропуски-зажигания да)
   =>
   (assert (диагноз "Отрегулируйте зазоры свечей зажигания или замените свечи.")))     

(defrule стук-двигателя ""
   (стук-двигателя да)
   =>
   (assert (диагноз "Требуется регулировка клапанов или замена масла.")))

(defrule нет-бензина ""
   (бензин-в-баке нет)
   =>
   (assert (диагноз "Заправьте бензин в бак.")))

(defrule разряжен-аккумулятор ""
   (заряд-аккумулятора нет)
   =>
   (assert (диагноз "Зарядите или замените аккумулятор.")))

(defrule свечи-нагар ""
   (состояние-свечей нагар)
   =>
   (assert (диагноз "Зачистите или замените свечи зажигания.")))

(defrule свечи-мокрые ""
   (состояние-свечей мокрые)
   =>
   (assert (диагноз "Просушите свечи и проверьте систему зажигания.")))

(defrule катушка-неисправна ""
   (проверка-катушки нет)
   =>
   (assert (диагноз "Замените катушку зажигания.")))

(defrule неизвестная-неисправность ""
  (declare (salience -10))
  (not (диагноз ?))
  =>
  (assert (диагноз "Рекомендуется обратиться к профессиональному автомеханику.")))

;;;********************************
;;;* ЗАПУСК СИСТЕМЫ И ВЫВОД *
;;;********************************

(defrule приветствие ""
  (declare (salience 10))
  =>
  (printout t crlf crlf)
  (printout t "=== Экспертная система диагностики автомобилей ===")
  (printout t crlf crlf))

(defrule вывод-диагноза ""
  (declare (salience 10))
  (диагноз ?рекомендация)
  =>
  (printout t crlf crlf)
  (printout t "Рекомендации по ремонту:")
  (printout t crlf crlf)
  (printout t ?рекомендация crlf crlf crlf))